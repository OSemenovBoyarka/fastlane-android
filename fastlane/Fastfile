	desc "Commits and pushes tag and version changes to main repository"
	private_lane :push_version_changes do |options|
		sh("git reset HEAD")
		sh("git add ../app/version.properties")
		sh("git commit -m \"#{options[:commit_message]}\"")
		add_git_tag
		push_to_git_remote
	end
	
	desc "Reads current version changelog from file CHANGELOG_CURRENT.md and puts it to CHANGELOG.md as new section for current version"
	desc "Also return current changelog contents"
	private_lane :copy_changelog do 
		#parsing app version from version properties file, code is executed from fastlane folder, so we need to add .. before path
		versionProps = load_properties("../app/version.properties")
		lane_context[SharedValues::BUILD_NUMBER] = versionProps['VERSION_CODE']
		#running update changelog
		update_changelog(version: "#{versionProps['VERSION_NAME']} (#{versionProps['VERSION_CODE']})")				
		lane_context[SharedValues::UPDATE_CHANGELOG_CURRENT]
	end
	
	desc "Commits changelog changes to git, use this after 'copy_changelog' lane"
	private_lane :commit_changelog do 
# 		TODO extract changelog commit to another action with nice output 
# 		ensure we have not staged anything except changelog
		sh("git reset HEAD")
# 		adding changed files, we need to add uplevel because this code is executed inside 'fastlane' folder
		sh("git add ../CHANGELOG.md")
		sh("git add ../CHANGELOG_CURRENT.md")
		sh("git commit -m \"Changelog update\"")
	end 

	# TODO use gradle to get current app version, this is a temporary solution
 def load_properties(properties_filename)
    properties = {}
    File.open(properties_filename, 'r') do |properties_file|
      properties_file.read.each_line do |line|
        line.strip!
        if (line[0] != ?# and line[0] != ?=)
          i = line.index('=')
          if (i)
            properties[line[0..i - 1].strip] = line[i + 1..-1].strip
          else
            properties[line] = ''
          end
        end
      end      
    end
    properties
 end
